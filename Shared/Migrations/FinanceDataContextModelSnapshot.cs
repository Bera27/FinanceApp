// <auto-generated />
using FinanceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceApp.Shared.Migrations
{
    [DbContext(typeof(FinanceDataContext))]
    partial class FinanceDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("FinanceApp.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Models.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataPagamento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("DataPagamento");

                    b.Property<string>("DataVencimento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("DataVencimento");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Descricao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Despesa", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Models.MetaOrcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MesAno")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("MesAno");

                    b.Property<decimal>("ValorMaximo")
                        .HasColumnType("TEXT")
                        .HasColumnName("ValorMaximo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("MetaOrcamento", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataDeRecebimento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("DataRecebimento");

                    b.Property<string>("Decricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Descricao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Receita", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Models.Despesa", b =>
                {
                    b.HasOne("FinanceApp.Models.Categoria", "Categoria")
                        .WithMany("Despesas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Despesa_Categoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("FinanceApp.Models.MetaOrcamento", b =>
                {
                    b.HasOne("FinanceApp.Models.Categoria", "Categoria")
                        .WithMany("MetaOrcamentos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MetaOrcamento_Categoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("FinanceApp.Models.Receita", b =>
                {
                    b.HasOne("FinanceApp.Models.Categoria", "Categoria")
                        .WithMany("Receitas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Receita_Categoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("FinanceApp.Models.Categoria", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("MetaOrcamentos");

                    b.Navigation("Receitas");
                });
#pragma warning restore 612, 618
        }
    }
}
